# VVhackamole
# By Calvin Probst calvin.probst@gmail.com
# https://github.com/calvinProbstSchool/whackamoleProbst
#

import pygame
import random
import sys
from pygame.locals import *
from pygame.sprite import  *

class DolphinHead(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)

        self.image = pygame.image.load("dolphinMoleHead.png")
        self.rect = self.image.get_rect()

class VVaveRow(pygame.sprite.Sprite):
    def __init__(self, x, y):
        pygame.sprite.Sprite.__init__(self)

        self.image = pygame.image.load("vvaves.png")
        self.rect = self.image.get_rect()
        self.rect.x, self.rect.y = x, y

class PlayButton(pygame.sprite.Sprite):
    def __init__(self, x, y, textFont, message, textColor, bgColor):
        pygame.sprite.Sprite.__init__(self)

        self.image = textFont.render(message,True, textColor, bgColor)

        self.rect = self.image.get_rect()
        self.rect.centerx, self.rect.y = x, centery


VVINDOVVSIZE = 600
FPS = 30
FONTSIZE = 60

VVHITE = (255, 255, 255)
BLACK = (0, 0, 0)
PURPBOI = (57,41,140)
BLUEMANGROUP = (33, 195, 200)



def main():
    global FPSCLOCK, DISPLAYSURF, GAMEFONT, ROVV1, ROVV2, ROVV3, ROVV4
    pygame.init()
    DISPLAYSURF = pygame.display.set_mode((VVINDOVVSIZE, VVINDOVVSIZE))
    FPSCLOCK = pygame.time.Clock()
    GAMEFONT = pygame.font.Font('./3Dventure.ttf', FONTSIZE)
    DOLPHINSPRITE = DolphinHead()
    VVAVE1 = VVaveRow(100, 125)
    VVAVE2 = VVaveRow(100, 225)
    VVAVE3 = VVaveRow(100, 325)
    VVAVE4 = VVaveRow(100, 425)
    STARTBUTTON = PlayButton(300, 50, GAMEFONT, "Play VVhackamole", BLUEMANGROUP, VVHITE)
    pygame.mixer_music.load("yodaDeath.mp3")

    mousex = 0
    mousey = 0
    timeGame = 0
    ROVV1 = Group(VVAVE1, STARTBUTTON)
    ROVV2 = Group(VVAVE2)
    ROVV3 = Group(VVAVE3)
    ROVV4 = Group(VVAVE4)
    gamePlaying = False
    newDolphinNeeded = False

    drawBoard()

    while True:

        if gamePlaying:
            drawBoard()
            timeGame =  int(pygame.time.get_ticks() / 1000)

        buttonPressed = False
        for event in pygame.event.get():
            if event.type == QUIT or (event.type == KEYUP and event.key == K_ESCAPE):
                pygame.quit()
                sys.exit()
            elif event.type == MOUSEMOTION:
                mousex, mousey = event.pos
            elif event.type == MOUSEBUTTONUP:
                buttonPressed = True
                mousex, mousey = event.pos

        if not gamePlaying and buttonPressed:
            if STARTBUTTON.rect.collidepoint:(mousex, mousey):
                ROVV1.remove(STARTBUTTON)
                gamePlaying = True
                newDolphinNeeded = True
                FPSCLOCK. = 0
        elif gamePlaying and buttonPressed and abs(mousex - 300) < 201 and abs(mousey - 300) < 201:




def drawBoard():
    DISPLAYSURF.fill(BLACK)
    drawClock()
    pygame.draw.rect(DISPLAYSURF, VVHITE, (100, 100, 400, 400))

    ROVV1.draw(DISPLAYSURF)
    pygame.draw.rect(DISPLAYSURF, VVHITE, (100, 200, 400, 300))

    ROVV2.draw(DISPLAYSURF)
    pygame.draw.rect(DISPLAYSURF, VVHITE, (100, 300, 400, 200))

    ROVV3.draw(DISPLAYSURF)
    pygame.draw.rect(DISPLAYSURF, VVHITE, (100, 400, 400, 100))

    ROVV4.draw(DISPLAYSURF)
    pygame.draw.rect(DISPLAYSURF, BLACK, (100, 500, 400, 100))
    pygame.display.update()


def drawClock():
    FPSCLOCK.tick(FPS)
    timeNum = int(pygame.time.get_ticks() / 1000)
    timeStr = str(int(timeNum % 60))
    timeNum = timeNum - (timeNum % 60)
    minnum = 0
    while timeNum >= 60:
        minnum += 1
        timeNum -= 60
    if len(timeStr) == 1:
        timeStr = "0" + timeStr
    timeStr = str(minnum) + ":" + timeStr
    timer = GAMEFONT.render(timeStr, True, VVHITE)
    DISPLAYSURF.blit(timer, (10, 10))



main()